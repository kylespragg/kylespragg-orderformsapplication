{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyles\\\\Desktop\\\\Projects\\\\orderformsgfd\\\\client\\\\src\\\\SendOrderPage.js\";\n// SendOrderPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './sendorder.css';\nconst serverUrl = 'http://localhost:3001';\nconst SendOrderPage = ({\n  setCurrentPage\n}) => {\n  const [generalItems, setGeneralItems] = useState([]);\n  const [hygieneItems, setHygieneItems] = useState([]); // both use states help reset the new list each time an item is added\n  const [newGeneralItem, setNewGeneralItem] = useState('');\n  const [newHygieneItem, setNewHygieneItem] = useState('');\n  const [newGeneralItemQuantity, setNewGeneralItemQuantity] = useState('');\n  const [newHygieneItemQuantity, setNewHygieneItemQuantity] = useState('');\n  const [showGeneralSuccessMessage, setGeneralSuccessMessage] = useState(false);\n  const [showHygieneSuccessMessage, setHygieneSuccessMessage] = useState(false);\n  const handleAddGeneralItem = () => {\n    if (newGeneralItem.trim() !== '' && newGeneralItemQuantity > 0) {\n      console.log(`Added new general item: ${newGeneralItem} (Quantity: ${newGeneralItemQuantity})`);\n      setGeneralItems(prevItems => [...prevItems, {\n        name: newGeneralItem,\n        quantity: newGeneralItemQuantity,\n        status: 'sent',\n        type: 'general'\n      }]); // updates generalItems with new item\n      setNewGeneralItem(''); // resets the state of setNewGeneralItem to an emtpy string \n      setNewGeneralItemQuantity('');\n    }\n  };\n  const handleAddHygieneItem = () => {\n    if (newHygieneItem.trim() !== '' && newHygieneItemQuantity > 0) {\n      console.log(`Added hygiene item: ${newHygieneItem} (Quantity: ${newHygieneItemQuantity})`);\n      setHygieneItems(prevItems => [...prevItems, {\n        name: newHygieneItem,\n        quantity: newHygieneItemQuantity,\n        status: 'sent',\n        type: 'hygiene'\n      }]); //gives hygiene item object a .name and .quantity feature\n      setNewHygieneItem('');\n      setNewHygieneItemQuantity('');\n    }\n  };\n  const handleRemoveItem = (index, itemType) => {\n    if (itemType === 'general') {\n      const removedItem = generalItems[index];\n      console.log(`Removed general item: ${removedItem.name}`);\n      const updatedItems = generalItems.filter((item, i) => i !== index);\n      setGeneralItems(updatedItems);\n    } else if (itemType === 'hygiene') {\n      const removedItem = hygieneItems[index];\n      console.log(`Removed hygiene item: ${removedItem.name}`);\n      const updatedItems = hygieneItems.filter((item, i) => i !== index);\n      setHygieneItems(updatedItems);\n    }\n  };\n  const handleEnterKey = (e, itemType) => {\n    if (e.key === 'Enter') {\n      if (itemType === 'general') {\n        handleAddGeneralItem();\n      } else if (itemType === 'hygiene') {\n        handleAddHygieneItem();\n      }\n    }\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3001/orderforms', {}).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const submitOrder = async items => {\n    try {\n      const currentDate = new Date();\n      const formattedDate = currentDate.toLocaleDateString(); // Get formatted date (day/month/year)\n      const response = await axios.post(`${serverUrl}/orderforms`, {\n        items: items.map(item => ({\n          name: item.name,\n          quantity: item.quantity,\n          status: item.status,\n          type: item.type,\n          postDate: formattedDate\n        }))\n      });\n      console.log(response);\n      let generalSuccess = false;\n      let hygieneSuccess = false; // may show warning here but there should be none\n\n      items.forEach(item => {\n        if (item.type === 'general') {\n          generalSuccess = true;\n        }\n        if (item.type === 'hygiene') {\n          hygieneSuccess = true;\n        }\n      });\n      if (generalSuccess) {\n        setGeneralSuccessMessage(true);\n      } else {\n        setHygieneSuccessMessage(true);\n      }\n    } catch (error) {\n      // Handle error...\n      console.error('Error submitting order:', error); // Handle unexpected errors if needed\n    }\n  };\n  /*add something to edit quantities */\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-list-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainHeadersText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"General\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addItemsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addItem\",\n    type: \"text\",\n    value: newGeneralItem,\n    onChange: e => setNewGeneralItem(e.target.value),\n    placeholder: \"Item Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addItem\",\n    type: \"number\",\n    value: newGeneralItemQuantity,\n    onChange: e => setNewGeneralItemQuantity(Math.max(0, parseInt(e.target.value))),\n    placeholder: \"Quantity\",\n    onKeyDown: e => handleEnterKey(e, 'general'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addItemButton\",\n    onClick: handleAddGeneralItem,\n    disabled: !(newGeneralItem.trim() !== '' && newGeneralItemQuantity > 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"Add General Item\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, generalItems.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"items-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"listItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \" \", item.name, \" (Quantity: \", item.quantity, \") \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"removeButton\",\n    onClick: () => handleRemoveItem(index, 'general'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 88\n    }\n  }, \"Remove\"))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submitOrderButton\",\n    onClick: () => {\n      submitOrder(generalItems, 'general');\n      console.log(`Order Submitted: ${generalItems.name}`);\n      setGeneralItems([]);\n      setTimeout(() => {\n        setGeneralSuccessMessage(true);\n        setNewGeneralItem('');\n        setNewGeneralItemQuantity('');\n      }, 300);\n      setTimeout(() => {\n        setGeneralSuccessMessage(false);\n      }, 5000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Submit General Items\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerSubmitandSuccess\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, showGeneralSuccessMessage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"successMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 38\n    }\n  }, \"General Order Successful!\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-list-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainHeadersText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, \"Hygiene\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addItemsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addItem\",\n    type: \"text\",\n    value: newHygieneItem,\n    onChange: e => setNewHygieneItem(e.target.value),\n    placeholder: \"Item Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addItem\",\n    type: \"number\",\n    value: newHygieneItemQuantity,\n    onChange: e => setNewHygieneItemQuantity(Math.max(0, parseInt(e.target.value))),\n    onKeyDown: e => handleEnterKey(e, 'hygiene'),\n    placeholder: \"Quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addItemButton\",\n    onClick: handleAddHygieneItem,\n    disabled: !(newHygieneItem.trim() !== '' && newHygieneItemQuantity > 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, \"Add Hygiene Item\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, hygieneItems.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"items-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"listItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \" \", item.name, \" (Quantity: \", item.quantity, \") \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"removeButton\",\n    onClick: () => handleRemoveItem(index, 'hygiene'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 88\n    }\n  }, \"Remove\"))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submitOrderButton\",\n    onClick: () => {\n      submitOrder(hygieneItems, 'hygiene');\n      console.log(`Order Submitted: ${hygieneItems.name}`);\n      setHygieneItems([]);\n      setTimeout(() => {\n        setHygieneSuccessMessage(true);\n        setNewHygieneItem('');\n        setNewHygieneItemQuantity('');\n      }, 300);\n      setTimeout(() => {\n        setHygieneSuccessMessage(false);\n      }, 5000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, \"Submit Hygiene Items\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerSubmitandSuccess\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, showHygieneSuccessMessage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"successMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 69\n    }\n  }, \"Hygiene Order Successful!\")))));\n};\nexport default SendOrderPage;","map":{"version":3,"names":["React","useState","useEffect","axios","serverUrl","SendOrderPage","setCurrentPage","generalItems","setGeneralItems","hygieneItems","setHygieneItems","newGeneralItem","setNewGeneralItem","newHygieneItem","setNewHygieneItem","newGeneralItemQuantity","setNewGeneralItemQuantity","newHygieneItemQuantity","setNewHygieneItemQuantity","showGeneralSuccessMessage","setGeneralSuccessMessage","showHygieneSuccessMessage","setHygieneSuccessMessage","handleAddGeneralItem","trim","console","log","prevItems","name","quantity","status","type","handleAddHygieneItem","handleRemoveItem","index","itemType","removedItem","updatedItems","filter","item","i","handleEnterKey","e","key","get","then","res","catch","err","submitOrder","items","currentDate","Date","formattedDate","toLocaleDateString","response","post","map","postDate","generalSuccess","hygieneSuccess","forEach","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","Math","max","parseInt","onKeyDown","onClick","disabled","setTimeout"],"sources":["C:/Users/kyles/Desktop/Projects/orderformsgfd/client/src/SendOrderPage.js"],"sourcesContent":["// SendOrderPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './sendorder.css';\r\nconst serverUrl = 'http://localhost:3001';\r\n\r\n\r\nconst SendOrderPage = ({ setCurrentPage }) => {\r\n\r\n  const [generalItems, setGeneralItems] = useState([]);\r\n  const [hygieneItems, setHygieneItems] = useState([]); // both use states help reset the new list each time an item is added\r\n  const [newGeneralItem, setNewGeneralItem] = useState('');\r\n  const [newHygieneItem, setNewHygieneItem] = useState('');\r\n  const [newGeneralItemQuantity, setNewGeneralItemQuantity] = useState('');\r\n  const [newHygieneItemQuantity, setNewHygieneItemQuantity] = useState('');\r\n  const [showGeneralSuccessMessage, setGeneralSuccessMessage] = useState(false);\r\n  const [showHygieneSuccessMessage, setHygieneSuccessMessage] = useState(false);\r\n\r\n\r\n\r\n  const handleAddGeneralItem = () => {\r\n\r\n    if (newGeneralItem.trim() !== '' && newGeneralItemQuantity > 0) { \r\n    \r\n      console.log(`Added new general item: ${newGeneralItem} (Quantity: ${newGeneralItemQuantity})`);\r\n      setGeneralItems((prevItems) => [...prevItems, {name: newGeneralItem, quantity: newGeneralItemQuantity, status: 'sent', type: 'general'} ]); // updates generalItems with new item\r\n      setNewGeneralItem(''); // resets the state of setNewGeneralItem to an emtpy string \r\n      setNewGeneralItemQuantity('');\r\n    }\r\n\r\n  };\r\n\r\n  const handleAddHygieneItem = () => {\r\n\r\n    if (newHygieneItem.trim() !== '' && newHygieneItemQuantity > 0) {\r\n\r\n      console.log(`Added hygiene item: ${newHygieneItem} (Quantity: ${newHygieneItemQuantity})`);\r\n      setHygieneItems((prevItems) => [...prevItems, {name: newHygieneItem, quantity: newHygieneItemQuantity, status: 'sent', type: 'hygiene'} ]); //gives hygiene item object a .name and .quantity feature\r\n      setNewHygieneItem('');\r\n      setNewHygieneItemQuantity('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveItem = (index, itemType) => {\r\n\r\n    if (itemType === 'general') {\r\n  \r\n      const removedItem = generalItems[index];\r\n      console.log(`Removed general item: ${removedItem.name}`)\r\n      const updatedItems = generalItems.filter((item, i) => i !== index);\r\n\r\n      setGeneralItems(updatedItems);\r\n\r\n    } else if (itemType === 'hygiene') {\r\n    \r\n      const removedItem = hygieneItems[index];\r\n      console.log(`Removed hygiene item: ${removedItem.name}`)\r\n      const updatedItems = hygieneItems.filter((item, i) => i !== index);\r\n      setHygieneItems(updatedItems);\r\n    } \r\n  };\r\n\r\n  const handleEnterKey = (e, itemType) => {\r\n\r\n    if (e.key === 'Enter'){\r\n      if (itemType === 'general'){\r\n        handleAddGeneralItem();\r\n      } else if (itemType === 'hygiene'){\r\n        handleAddHygieneItem();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    axios.get('http://localhost:3001/orderforms', {})\r\n      .then(res => {\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n  const submitOrder = async (items) => {\r\n\r\n    try {\r\n      const currentDate = new Date();\r\n      const formattedDate = currentDate.toLocaleDateString(); // Get formatted date (day/month/year)\r\n      const response = await axios.post(`${serverUrl}/orderforms`, {\r\n          items: items.map(item => ({\r\n            name: item.name,\r\n            quantity: item.quantity,\r\n            status: item.status,\r\n            type: item.type,\r\n            postDate: formattedDate,\r\n          })),\r\n      });\r\n      console.log(response)\r\n      let generalSuccess = false;\r\n      let hygieneSuccess = false; // may show warning here but there should be none\r\n\r\n      items.forEach(item => {\r\n        if (item.type === 'general') {\r\n          generalSuccess = true;\r\n        }\r\n        if (item.type ==='hygiene') {\r\n          hygieneSuccess = true;\r\n        }\r\n      });\r\n\r\n      if (generalSuccess){\r\n        setGeneralSuccessMessage(true);\r\n      }\r\n      else {\r\n        setHygieneSuccessMessage(true);\r\n      }\r\n      } catch (error) {\r\n      // Handle error...\r\n      console.error('Error submitting order:', error); // Handle unexpected errors if needed\r\n    }\r\n  } \r\n/*add something to edit quantities */\r\n  return (\r\n  \r\n    <div className=\"list-container\">\r\n      <div className=\"custom-list-border\">\r\n        <div className = \"mainHeadersText\">General</div>\r\n        <div className=\"addItemsContainer\">\r\n\r\n        <input className=\"addItem\"\r\n          type=\"text\"\r\n          value={newGeneralItem}\r\n          onChange={(e) => setNewGeneralItem(e.target.value)}\r\n          placeholder='Item Name'\r\n        />\r\n\r\n        <input className=\"addItem\"\r\n            type=\"number\"\r\n            value={newGeneralItemQuantity}\r\n            onChange={(e) => setNewGeneralItemQuantity(Math.max(0, parseInt(e.target.value)))}\r\n            placeholder=\"Quantity\"\r\n            onKeyDown ={(e) => handleEnterKey(e, 'general')}\r\n          />\r\n        <button className=\"addItemButton\" onClick={handleAddGeneralItem} disabled={!(newGeneralItem.trim() !== '' && newGeneralItemQuantity > 0)}>Add General Item</button>\r\n        </div>\r\n        <ul className= \"items-list\">\r\n          {generalItems.map((item, index) => (\r\n            <div key={index}>\r\n              <li key={index} className=\"items-container\"> {/* live element */}\r\n                <h3 className=\"listItem\"> {item.name} (Quantity: {item.quantity}) </h3><button className=\"removeButton\" onClick={() => handleRemoveItem(index, 'general')}>Remove</button>\r\n              </li>\r\n            </div>\r\n          ))}\r\n        </ul>\r\n          <button className=\"submitOrderButton\" onClick={() => {\r\n            submitOrder(generalItems, 'general');\r\n            console.log(`Order Submitted: ${generalItems.name}`);\r\n            setGeneralItems([]);\r\n            setTimeout(() => {\r\n              setGeneralSuccessMessage(true);\r\n              setNewGeneralItem('');\r\n              setNewGeneralItemQuantity('');\r\n            }, 300);\r\n            setTimeout(() => {\r\n              setGeneralSuccessMessage(false);\r\n            },5000);\r\n          }}>\r\n            Submit General Items\r\n          </button>\r\n          <div className=\"containerSubmitandSuccess\">\r\n          {showGeneralSuccessMessage && (\r\n          <div className=\"animation\"><p className=\"successMessage\">General Order Successful!</p></div>\r\n        )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"custom-list-border\">\r\n        <div className = \"mainHeadersText\">Hygiene</div>\r\n        <div className=\"addItemsContainer\">\r\n        <input className=\"addItem\"\r\n          type=\"text\"\r\n          value={newHygieneItem}\r\n          onChange={(e) => setNewHygieneItem(e.target.value)}\r\n          placeholder='Item Name'\r\n        />\r\n         <input className=\"addItem\"\r\n            type=\"number\"\r\n            value={newHygieneItemQuantity}\r\n            onChange={(e) => setNewHygieneItemQuantity(Math.max(0, parseInt(e.target.value)))}\r\n            onKeyDown={(e) => handleEnterKey(e,'hygiene')}\r\n            placeholder=\"Quantity\"\r\n          />\r\n        <button className=\"addItemButton\" onClick={handleAddHygieneItem} disabled={!(newHygieneItem.trim() !== '' && newHygieneItemQuantity > 0)}>Add Hygiene Item</button>\r\n        </div>\r\n        <ul className=\"items-list\">\r\n          {hygieneItems.map((item, index) => (\r\n            <div key={index}>\r\n              <li key={index} className=\"items-container\">\r\n                <h3 className=\"listItem\"> {item.name} (Quantity: {item.quantity}) </h3><button className=\"removeButton\" onClick={() => handleRemoveItem(index, 'hygiene')}>Remove</button>\r\n              </li>\r\n            </div>\r\n          ))}\r\n        </ul>     \r\n        <button className=\"submitOrderButton\" onClick={() => {\r\n          submitOrder(hygieneItems, 'hygiene');\r\n          console.log(`Order Submitted: ${hygieneItems.name}`);\r\n          setHygieneItems([]);\r\n          setTimeout(() => {\r\n            setHygieneSuccessMessage(true);\r\n            setNewHygieneItem('');\r\n            setNewHygieneItemQuantity('');\r\n          }, 300);\r\n          setTimeout(() => {\r\n            setHygieneSuccessMessage(false);\r\n          }, 5000);\r\n        }}>\r\n          Submit Hygiene Items\r\n        </button>\r\n        <div className=\"containerSubmitandSuccess\">\r\n          {showHygieneSuccessMessage && (<div className=\"animation\"><p className=\"successMessage\">Hygiene Order Successful!</p></div>\r\n        )}\r\n        </div>\r\n      </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default SendOrderPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}